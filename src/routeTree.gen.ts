/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteImport } from './routes/_main'
import { Route as MainIndexRouteImport } from './routes/_main/index'
import { Route as MainSettingsRouteImport } from './routes/_main/settings'
import { Route as MainPrivacyRouteImport } from './routes/_main/privacy'
import { Route as MainImprintRouteImport } from './routes/_main/imprint'
import { Route as MainAboutRouteImport } from './routes/_main/about'

const MainRoute = MainRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any)
const MainSettingsRoute = MainSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => MainRoute,
} as any)
const MainPrivacyRoute = MainPrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => MainRoute,
} as any)
const MainImprintRoute = MainImprintRouteImport.update({
  id: '/imprint',
  path: '/imprint',
  getParentRoute: () => MainRoute,
} as any)
const MainAboutRoute = MainAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => MainRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof MainAboutRoute
  '/imprint': typeof MainImprintRoute
  '/privacy': typeof MainPrivacyRoute
  '/settings': typeof MainSettingsRoute
  '/': typeof MainIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof MainAboutRoute
  '/imprint': typeof MainImprintRoute
  '/privacy': typeof MainPrivacyRoute
  '/settings': typeof MainSettingsRoute
  '/': typeof MainIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_main': typeof MainRouteWithChildren
  '/_main/about': typeof MainAboutRoute
  '/_main/imprint': typeof MainImprintRoute
  '/_main/privacy': typeof MainPrivacyRoute
  '/_main/settings': typeof MainSettingsRoute
  '/_main/': typeof MainIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/imprint' | '/privacy' | '/settings' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/imprint' | '/privacy' | '/settings' | '/'
  id:
    | '__root__'
    | '/_main'
    | '/_main/about'
    | '/_main/imprint'
    | '/_main/privacy'
    | '/_main/settings'
    | '/_main/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MainRoute: typeof MainRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/settings': {
      id: '/_main/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof MainSettingsRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/privacy': {
      id: '/_main/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof MainPrivacyRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/imprint': {
      id: '/_main/imprint'
      path: '/imprint'
      fullPath: '/imprint'
      preLoaderRoute: typeof MainImprintRouteImport
      parentRoute: typeof MainRoute
    }
    '/_main/about': {
      id: '/_main/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof MainAboutRouteImport
      parentRoute: typeof MainRoute
    }
  }
}

interface MainRouteChildren {
  MainAboutRoute: typeof MainAboutRoute
  MainImprintRoute: typeof MainImprintRoute
  MainPrivacyRoute: typeof MainPrivacyRoute
  MainSettingsRoute: typeof MainSettingsRoute
  MainIndexRoute: typeof MainIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainAboutRoute: MainAboutRoute,
  MainImprintRoute: MainImprintRoute,
  MainPrivacyRoute: MainPrivacyRoute,
  MainSettingsRoute: MainSettingsRoute,
  MainIndexRoute: MainIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  MainRoute: MainRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
